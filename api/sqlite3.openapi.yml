openapi: '3.0.2'
info:
  title: GREST
  version: '1.0'
servers:
  - url: https://api.server.test/v1

components:
  parameters:
    table:
      in: path
      name: table
      x-grest-template-allowed: true
      schema:
        type: string
      required: true
    username:
      in: path
      name: username
      x-grest-template-allowed: true
      schema:
        type: string
      required: true
    action:
      in: path
      name: action
      x-grest-template-allowed: true
      schema:
        type: string
      required: true
paths:
  /_data/:
    get:
      responses:
        '200':
          description: OK
      x-grest:
        queries:
          - sql: |
              SELECT name
              FROM sqlite_master 
              WHERE type ='table'
              AND name NOT LIKE 'sqlite_%';
  /_data/{table}:
    get:
      responses:
        '200':
          description: OK
      parameters:
        - $ref: '#/components/parameters/table'
      x-grest:
        queries:
          - sql: |
              SELECT * FROM {{.table}}
    post:
      responses:
        '200':
          description: OK
      parameters:
        - $ref: '#/components/parameters/table'
      requestBody:
        required: true
        x-grest-template-allowed: true
        content:
          application/json:
            schema:
              type: object
      x-grest:
        queries:
          - sql: |
              INSERT INTO {{.table}} (
                {{$first := true}}{{range $col, $val := .body}}
                {{if $first}}{{$first = false}}{{else}},{{end}}
                {{$col}}{{end}}
                ) VALUES (
                {{$first = true}}{{range $col, $val := .body}}
                {{if $first}}{{$first = false}}{{else}},{{end}}
                :{{$col}}{{end}}
              )
    put:
      responses:
        '200':
          description: OK
      parameters:
        - $ref: '#/components/parameters/table'
      requestBody:
        required: true
        x-grest-template-allowed: true
        content:
          application/json:
            schema:
              type: object
      x-grest:
        queries:
          - sql: |
              CREATE TABLE {{.table}} (
                {{$first := true}}{{range $col, $type := .body}}
                {{if $first}}{{$first = false}}{{else}},{{end}}
                {{$col}} {{$type}}{{end}}
              )
    delete:
      responses:
        '200':
          description: OK
      parameters:
        - $ref: '#/components/parameters/table'
      x-grest:
        queries:
          - sql: |
              DROP TABLE IF EXISTS {{.table}}
          - sql: |
              DROP VIEW IF EXISTS {{.table}}
